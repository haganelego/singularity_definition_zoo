Bootstrap: docker
From: nvidia/cuda:11.4.0-cudnn8-devel-ubuntu20.04
Stage: build

%setup
    ############################################
    # setup. コンテナ外で行われるコマンド
    ############################################

%files
    ############################################
    # files ファイルのマウント
    ############################################
    ../000_template/entrypoint.sh /

%environment
    ############################################
    # enviroments 環境変数の定義
    ############################################
    export TZ=Asia/Tokyo 
    export LC_ALL=C

%post
    ############################################
    # post ファイルのダウロードとか，色々．基本的にここに書く
    ############################################
    # aptでインストールする場合，入力待ちを避けるために下記のように書く
    # DEBIAN_FRONTEND=noninteractive && apt install -y hogehoge ...

    # essential  
    apt update
    DEBIAN_FRONTEND=noninteractive apt install -y lsb-release wget curl git nano gnupg build-essential software-properties-common
    mkdir -p /run/user/1000
    mkdir -p /var/lib/dbus
    
    # avoid freezing
    DEBIAN_FRONTEND=noninteractive apt install -y tzdata keyboard-configuration

    # install common software
    DEBIAN_FRONTEND=noninteractive apt install -y openssl libssl-dev python3-dev libopenexr-dev libxi-dev libglfw3-dev \
                                                  libglew-dev libomp-dev libxinerama-dev libxcursor-dev ffmpeg \
                                                  libboost-program-options-dev libboost-filesystem-dev libboost-graph-dev libboost-system-dev \
                                                  libboost-test-dev libeigen3-dev libsuitesparse-dev libfreeimage-dev libmetis-dev libgoogle-glog-dev \
                                                  libgflags-dev libglew-dev qtbase5-dev libqt5opengl5-dev libcgal-dev libatlas-base-dev libsuitesparse-dev

    # python setup
    ln -s /usr/bin/python3.8 /usr/bin/python
    curl -kL https://bootstrap.pypa.io/pip/get-pip.py | python

    # install python module 
    pip install \
    commentjson~=0.9.0 \
    imageio~=2.16.0 \
    numpy~=1.21.2 \
    pybind11~=2.7.1 \
    scipy~=1.7.1 \
    tqdm~=4.62.2 \
    opencv-python~=4.5.5.62 \

    # install cmake
    wget https://github.com/Kitware/CMake/releases/download/v3.22.2/cmake-3.22.2.tar.gz
    tar -zxvf cmake-3.22.2.tar.gz
    cd cmake-3.22.2
    ./bootstrap
    make
    make install
    cd ../
    rm -rf cmake-3.22.2.tar.gz cmake-3.22.2

    # install Ceres solver
    git clone https://ceres-solver.googlesource.com/ceres-solver
    cd ceres-solver
    git checkout $(git describe --tags) # Checkout the latest release
    mkdir build
    cd build
    cmake .. -DBUILD_TESTING=OFF -DBUILD_EXAMPLES=OFF
    make -j
    make install
    cd ..
    rm -rf ceres-solver

    # install colmap
    git clone https://github.com/colmap/colmap.git
    cd colmap
    git checkout dev
    mkdir build
    cd build
    cmake ..
    make -j
    make install
    cd ..
    rm -rf colmap

    # finalize
    rm -rf /var/lib/apt/lists/*

%runscript
    ############################################
    # runscript. singularity run で実行するコマンド
    ############################################

%startscript
    ############################################
    # startscript. singularity insntance startで実行するコマンド 
    ############################################

%test
    ############################################
    # test. テスト時に実行するコマンド
    ############################################


%labels
    ############################################
    # label. ラベル
    ############################################
    Author Daiju Kanaoka
    Version v0.0.1

%help
    ############################################
    # help. ヘルプ
    ############################################
